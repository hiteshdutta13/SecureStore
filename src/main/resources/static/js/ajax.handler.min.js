'use strict';

const AjaxUtil = new function() {
    this.showError = function(error) {
       Swal.fire({
         title: "Error!",
         text: error,
         icon: "error"
       });
    };
    this.authentication = "secure-store.com;document&folders;",
    this.Get = function(options) {
        $.ajax({
            type: "GET",
            contentType: "application/json",
            url: options.url,
            dataType: "json",
            headers : {"Accept-Authentication" : AjaxUtil.authentication},
            timeout: 100000,
            success: function(data) {
                if (options.callBack instanceof Function) {
                    options.callBack(data);
                }
            },
            error: function(e) {
                if(e.responseJSON != undefined && e.responseJSON.message != undefined) {
                    AjaxUtil.showError(e.responseJSON.message);
                }else {
                    AjaxUtil.showError("An error occurred");
                }
               // $.unblockUI();
            },
            done: function() { }
        });
    };
    this.GET = function(options) {
        //$.blockUI({ message: (options.loadingUIMessage !== undefined ? options.loadingUIMessage: 'Loading...') });
        $.ajax({
            type: "GET",
            contentType: "application/json",
            url: options.url,
            dataType: "json",
            headers : {"Accept-Authentication" : AjaxUtil.authentication},
            timeout: 100000,
            success: function(data) {
                if (options.callBack instanceof Function) {
                    options.callBack(data);
                }
                //$.unblockUI();
            },
            error: function(e) {
                if (options.errorBack instanceof Function) {
                   options.errorBack(e.responseJSON);
                }
                if(e.responseJSON != undefined && e.responseJSON.message != undefined) {
                    AjaxUtil.showError(e.responseJSON.message);
                }else {
                   AjaxUtil.showError("An error occurred");
                }
                //$.unblockUI();
            },
            done: function() { }
        });
    };
    this.POST = function(options) {
       // $.blockUI({ message: (options.loadingUIMessage !== undefined ? options.loadingUIMessage: 'Saving...') });
        $.ajax({
            type: "POST",
            contentType: "application/json",
            url: options.url,
            data: JSON.stringify(options.data),
            dataType: "json",
            headers : {"Accept-Authentication" : AjaxUtil.authentication},
            timeout: 100000,
            success: function(data) {
               if (options.callBack instanceof Function) {
                   options.callBack(data);
               }
               if(options.message != undefined) {
                    AjaxUtil.showError(options.message);
               }
               //$.unblockUI();
            },
            error: function(e) {
                if (options.errorBack instanceof Function) {
                   options.errorBack(e.responseJSON);
                }
                if(e.responseJSON != undefined && e.responseJSON.message != undefined) {
                    AjaxUtil.showError(e.responseJSON.message);
                }else {
                    AjaxUtil.showError("An error occurred");
                }
               // $.unblockUI();
            },
            done: function() { }
        });
    };
    this.PUT = function(options) {
       // $.blockUI({ message: (options.loadingUIMessage !== undefined ? options.loadingUIMessage: 'Updating...') });
        $.ajax({
            type: "PUT",
            contentType: "application/json",
            url: options.url,
            data: JSON.stringify(options.data),
            dataType: "json",
            headers : {"Accept-Authentication" : AjaxUtil.authentication},
            timeout: 100000,
            success: function(data) {
               if (options.callBack instanceof Function) {
                   options.callBack(data);
               }
               if(options.message != undefined) {
                   AjaxUtil.showError(options.message);
               }
               //$.unblockUI();
            },
            error: function(e) {
                if(e.responseJSON != undefined && e.responseJSON.message != undefined) {
                    AjaxUtil.showError(e.responseJSON.message);
                }else {
                   AjaxUtil.showError("An error occurred");
                }
                //$.unblockUI();
            },
            done: function() { }
        });
    };
    this.DELETE = function(options) {
        //$.blockUI({ message: (options.loadingUIMessage !== undefined ? options.loadingUIMessage: 'Deleting...') });
        $.ajax({
            type: "DELETE",
            contentType: "application/json",
            url: options.url,
           // data: JSON.stringify(options.data),
            dataType: "json",
            headers : {"Accept-Authentication" : AjaxUtil.authentication},
            timeout: 100000,
            success: function(data) {
               if (options.callBack instanceof Function) {
                   options.callBack(data);
               }
               if(options.message != undefined) {
                  AjaxUtil.showError(options.message);
               }
               //$.unblockUI();
            },
            error: function(e) {
                if(e.responseJSON != undefined && e.responseJSON.message != undefined) {
                   AjaxUtil.showError(e.responseJSON.message);
                }else {
                   AjaxUtil.showError("An error occurred");
                }
                //$.unblockUI();
            },
            done: function() { }
        });
    };
    this.UPLOAD = function(options) {
        //$.blockUI({ message: (options.loadingUIMessage !== undefined ? options.loadingUIMessage: 'Uploading...') });
        $.ajax({
            url: options.url,
            type: "POST",
            data: options.formData,
            enctype: "multipart/form-data",
            headers : {"Accept-Authentication" : AjaxUtil.authentication},
            processData: false,
            contentType: false,
            cache: false,
            success: function(data) {
                if (options.callBack instanceof Function) {
                    options.callBack(data);
                }
                if(options.message != undefined) {
                    AjaxUtil.showError(options.message);
                }
                //$.unblockUI();
            },
            error: function(res) {
                if(e.responseJSON != undefined && e.responseJSON.message != undefined) {
                    AjaxUtil.showError(e.responseJSON.message);
                }else {
                    AjaxUtil.showError("An error occurred");
                }
               // $.unblockUI();
            }
        });
    };
};