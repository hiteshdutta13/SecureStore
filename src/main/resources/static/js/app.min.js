'use strict';

const Folder = new function() {
    this.selected = "0";
    this.refresh = function() {
        window.location.reload();
    };
    this.open = function(folderId) {
        Folder.selected = folderId;
        AjaxUtil.GET({
            url: Folder.context+"/api/folder/"+folderId,
            callBack: Drive.open
        });
    };
    this.initialize = function() {
        this.context = $("#container").data("context");
        this.selected = "0";
        $(".btnCreateFolder").on("click", function(e) {
            e.preventDefault();
            if($("#folder-name").val().trim() != "") {
                AjaxUtil.POST({
                    url: Folder.context+"/api/folder",
                    data: {name: $("#folder-name").val(), parent :{id: Folder.selected}},
                    callBack: Folder.refresh
                });
            }else {
                $("#folder-name").addClass("is-invalid");
            }
        });
        $("#folder-name").on("focus", function(){
            $(this).removeClass("is-invalid");
        });
        $(".btn-close, .btnCancelFolder").on("click", function() {
            $("#folder-name").removeClass("is-invalid");
            $("#folder-name").val("");
        });
    };
};
const File = new function() {
    this.upload = function(folderId) {
        var fileInput = $('#fileSelected')[0].files[0];
        var formData = new FormData();
        formData.append('file', fileInput);
         if (fileInput.size > (10 * 1024 * 1024)) {
            alert('File size exceeds 10MB limit.');
            return false;
         }
         let callBack = function(response) {
            if(response.success) {
                Folder.refresh();
            }
         };
         AjaxUtil.UPLOAD({
             url: File.context + "/api/file/upload/"+folderId,
             formData: formData,
             callBack: callBack
         });
    };
    this.fileIcons = {
       'pdf': 'fa-file-pdf', // CSS class for PDF icon
       'doc': 'fa-file-word', // CSS class for Word icon
       'docx': 'fa-file-word', // CSS class for Word icon
       'xls': 'fa-file-excel', // CSS class for Excel icon
       'xlsx': 'fa-file-excel', // CSS class for Excel icon
       'jpg': 'fa-image', // CSS class for JPEG icon
       'jpeg': 'fa-image', // CSS class for JPEG icon
       'png': 'fa-image', // CSS class for PNG icon
       'gif': 'fa-image', // CSS class for GIF icon
       'txt': 'fa-file-lines', // CSS class for Text file icon
       'default': 'fa-file' // CSS class for default icon
    };
    this.getFileExtension = function(fileName) {
        return fileName.split('.').pop().toLowerCase();
    };
    this.icon = function(fileName) {
        const ext = File.getFileExtension(fileName);
        return File.fileIcons[ext] || File.fileIcons["default"];
    };
    this.initialize = function() {
        this.context = $("#container").data("context");
        $(".btnUploadFile").on("click", function(e) {
          e.preventDefault();
          File.upload(Folder.selected);
        });
    };
};

const Drive = new function() {
    this.events = function() {
        $(".folder-name").on("click", function(e) {
            e.preventDefault();
            Folder.open($(this).attr("id"));
        });
    };
    this.open = function(response) {
        var data = response.data;
        $(".driveContent").empty();
        $(".card-subtitle").empty().append("<a href='"+contextPath+"/my-drive' class='text-decoration-none'>My Drive</a>").append(" / ").append(data.name);
        disableNavigation();
    };
    this.load = function(response) {
        $(".driveContent").empty();
        $(".card-subtitle").empty().append("My Drive");
        if(response.data) {
            var folders = response.data.folders;
            var divRow = $("<div/>").attr({class: "row justify-content-between gap-4"});
            for(let index = 0; index < folders.length; index++) {
                const divCol = $("<div/>").attr({class: "col-sm-5 col-md-5 col-lg-5 col-xl-5 col-xxl-5 py-2 border border-1 rounded-1"});
                const divColR = $("<div/>").attr({class: "row"});
                const divColIcon = $("<div/>").attr({class: "col-sm-1 col-md-1 col-lg-1 col-xl-1 col-xxl-1"});
                divColIcon.append("<i class='fa fa-folder text-success'></i>")
                divColR.append(divColIcon);
                const divColName = $("<a/>").attr({class: "col-sm-10 col-md-10 col-lg-10 col-xl-10 col-xxl-10 folder-name text-decoration-none text-dark text-ellipsis", href: "javascript:;", id: folders[index].id, title: folders[index].name});
                divColName.append(folders[index].name);
                divColR.append(divColName);
                const divColOptions = $("<a/>").attr({class: "col-sm-1 col-md-1 col-lg-1 col-xl-1 col-xxl-1 folder-options", href: "javascript:;", id: folders[index].id});
                divColOptions.append('<i class="fa-solid fa-ellipsis-vertical text-dark"></i>');
                divColR.append(divColOptions);
                divCol.append(divColR);
                divRow.append(divCol);
            }
            if(folders.length > 0) {
                 $(".driveContent").append("<h6 class='text-muted'>Folders</h6>");
                 $(".driveContent").append(divRow);
            }
            var files = response.data.files;
            var divFileRow = $("<div/>").attr({class: "row justify-content-between gap-4"});
            for(let index = 0; index < files.length; index++) {
                const divCol = $("<div/>").attr({class: "col-sm-5 col-md-5 col-lg-5 col-xl-5 col-xxl-5 py-2 border border-1 rounded-1"});
                const divColR = $("<div/>").attr({class: "row"});
                const divColIcon = $("<div/>").attr({class: "col-sm-1 col-md-1 col-lg-1 col-xl-1 col-xxl-1"});
                divColIcon.append("<i class='fa "+File.icon(files[index].name)+" text-success'></i>")
                divColR.append(divColIcon);
                const divColName = $("<a/>").attr({class: "col-sm-10 col-md-10 col-lg-10 col-xl-10 col-xxl-10 file-name text-decoration-none text-dark text-ellipsis", href: "javascript:;", id: files[index].id, title: files[index].originalName});
                divColName.append(files[index].originalName);
                divColR.append(divColName);
                const divColOptions = $("<a/>").attr({class: "col-sm-1 col-md-1 col-lg-1 col-xl-1 col-xxl-1 file-options", href: "javascript:;", id: files[index].id});
                divColOptions.append('<i class="fa-solid fa-ellipsis-vertical text-dark"></i>');
                divColR.append(divColOptions);
                divCol.append(divColR);
                divFileRow.append(divCol);
            }
            if(files.length > 0) {
                 $(".driveContent").append("<h6 class='text-muted'>Files</h6>");
                 $(".driveContent").append(divFileRow);
            }
            if(folders.length == 0 && files.length == 0 ) {
                $(".driveContent").append("It looks like your drive is currently empty.");
            }
        }
        Drive.events();
    };
    this.initialize = function() {
        this.context = $("#container").data("context");
        AjaxUtil.GET({
            url: Drive.context+"/api/drive",
            callBack: Drive.load
        });
    };
};
Folder.initialize();
Drive.initialize();
File.initialize();